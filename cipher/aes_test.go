package cipher

import (
	"testing"

	"github.com/Lavode/cryptopals/expect"
)

func TestAESECBEncryptAndDecrypt(t *testing.T) {
	expectedMsg := []byte(`Hello world. This is a plaintext.
It contains many letters and some punctuation marks.
It is also a multiple of 16 bytes. Fun!!
`)

	// openssl aes-128-ecb -e -K '59454c4c4f57205355424d4152494e45' -nopad -in INFILE -out OUTFILE
	expectedCtxt := []byte{
		0x69, 0x81, 0xce, 0x7e, 0x36, 0xc0, 0x86, 0xed,
		0xdc, 0x86, 0xb9, 0x4f, 0x69, 0x07, 0x81, 0x85,
		0x18, 0x11, 0xf9, 0x15, 0xb4, 0x65, 0x8a, 0x2c,
		0x3f, 0xf8, 0x7c, 0xc6, 0xdd, 0xba, 0x11, 0x65,
		0x4e, 0xf4, 0xcf, 0xa2, 0x84, 0xd8, 0x8e, 0xc0,
		0x2f, 0xd4, 0x7f, 0xe3, 0xa2, 0x7c, 0xf6, 0xf4,
		0xf1, 0xf1, 0xad, 0x50, 0x72, 0xdb, 0xff, 0x80,
		0x75, 0x48, 0x89, 0xfa, 0xe7, 0x02, 0x2c, 0x10,
		0xe1, 0xe0, 0xb1, 0x0f, 0xea, 0x1a, 0x39, 0xe3,
		0x4b, 0x87, 0xc0, 0x62, 0xf7, 0xd9, 0xaa, 0x9b,
		0x61, 0xf9, 0x09, 0x09, 0x12, 0x91, 0x6f, 0x83,
		0x6d, 0xcb, 0xc1, 0xc8, 0x9f, 0xe8, 0x3e, 0x4d,
		0xc3, 0x22, 0x02, 0x8c, 0x42, 0x8c, 0x5c, 0x36,
		0x96, 0x6f, 0x74, 0x37, 0xc3, 0x49, 0xeb, 0xd4,
		0x53, 0xda, 0x87, 0x22, 0x54, 0x84, 0x17, 0xb5,
		0x93, 0x2b, 0xaf, 0x8e, 0xe4, 0xe0, 0xd0, 0xd0,
	}

	key := []byte("YELLOW SUBMARINE")

	ctxt, err := AESECBEncrypt(expectedMsg, key)
	expect.NoError(t, err)
	expect.Equals(t, expectedCtxt, ctxt)

	msg, err := AESECBDecrypt(ctxt, key)
	expect.NoError(t, err)
	expect.Equals(t, expectedMsg, msg)
}
