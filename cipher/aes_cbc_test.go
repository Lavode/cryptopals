package cipher

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestAESCBCEncryptAndDecrypt(t *testing.T) {
	expectedMsg := []byte(`Hello world. This is a plaintext.
It contains many letters and some punctuation marks.
It is also a multiple of 16 bytes. Fun!!
`)

	// openssl aes-128-cbc -e -K '59454c4c4f57205355424d4152494e45' -iv '00112233445566778899AABBCCDDEEFF' -nopad -in /tmp/infile -out /tmp/outfile
	expectedCtxt := []byte{
		0x44, 0x93, 0x9b, 0x38, 0xd5, 0x37, 0x53, 0x39,
		0x8d, 0x25, 0xd8, 0x21, 0x4f, 0x9c, 0x2d, 0x5b,
		0x24, 0xe8, 0x6f, 0x5c, 0x0c, 0xa3, 0xb5, 0xd3,
		0x81, 0x19, 0xc7, 0x88, 0x87, 0x51, 0x1b, 0x40,
		0x0d, 0xa2, 0xc0, 0x29, 0x58, 0xbf, 0x6a, 0xa2,
		0xde, 0x08, 0xd6, 0x57, 0x46, 0xfb, 0x9b, 0xea,
		0x2f, 0x0f, 0xbf, 0x87, 0x6f, 0xbb, 0x0f, 0x12,
		0xf6, 0x7e, 0x51, 0xc7, 0x7f, 0x07, 0xf4, 0x37,
		0xb0, 0xb8, 0xed, 0x1d, 0x39, 0xd1, 0xd3, 0xf3,
		0x55, 0x6f, 0xe5, 0x28, 0x0a, 0x73, 0xee, 0xb0,
		0xd4, 0x05, 0xa9, 0x96, 0x53, 0xce, 0x5e, 0xd7,
		0xd8, 0x9f, 0x08, 0x46, 0x33, 0x77, 0xd4, 0xa4,
		0x21, 0x50, 0xdd, 0x3e, 0x7c, 0x0e, 0xb2, 0xb4,
		0x5b, 0xef, 0xe3, 0x74, 0xa8, 0x95, 0x20, 0xb7,
		0x2e, 0x4f, 0x91, 0xcc, 0x9a, 0x15, 0x3f, 0x06,
		0xcd, 0x19, 0x26, 0xb8, 0x1d, 0x28, 0xb1, 0x1f,
	}

	key := []byte("YELLOW SUBMARINE")
	iv := []byte{
		0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77,
		0x88, 0x99, 0xAA, 0xBB, 0xCC, 0xDD, 0xEE, 0xFF,
	}

	cbc := AESCBC{Key: key, IV: iv}

	ctxt, err := cbc.Encrypt(expectedMsg)
	assert.Nil(t, err)
	assert.Equal(t, expectedCtxt, ctxt)

	msg, err := cbc.Decrypt(ctxt)
	assert.Nil(t, err)
	assert.Equal(t, expectedMsg, msg)
}
